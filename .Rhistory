knitr::opts_chunk$set(echo = TRUE)
melt <- read.table("SGTADATASETS/melt.dat", header = TRUE)
View(melt)
str(melt)
head(melt)
head(melt$meltpoint)
stem(melt$meltpoint)
#Part a
par(mfrow = c(1,2))
hist(melt$meltpoint, main = "Histogram of Melting Point of Fat", xlab = "Melting Point (Celcius")
boxplot(melt$meltpoint, main = "Histogram of Melting Point of Fat", xlab = "Melting Point (Celcius")
#stem(melt$meltpoint)
#Part a
par(mfrow = c(1,2))
hist(melt$meltpoint, main = "Histogram of Melting Point of Fat", xlab = "Melting Point (Celcius")
boxplot(melt$meltpoint, main = "Histogram of Melting Point of Fat", xlab = "Melting Point (Celcius")
#stem(melt$meltpoint)
#Part b
summary(melt$meltpoint)
boxplot(melt$meltpoint, main = "Histogram of Melting Point of Fat", xlab = "Melting Point (Celcius")
#Part b
summary(melt$meltpoint)
mp=melt$meltpoint
#Part b
summary(mp)
#Part a
mp = melt$meltpoint
length(mp)
sd(mp)
mean(mp)
dim(melt)
dim(mp)
dim(melt)
(mp, mu = 94.4)
t.test(mp, mu = 94.4)
t.test(mp, my=94.4, conf.level = 0.99)
data <- read.table("data.csv", header = TRUE)
View(data)
View(data)
mean(data$val.measure)
mean(data$val.measure)
mean(data)
data <- read.table("data.csv", header = TRUE)
mean(data)
data <- read.table("data.csv", header = TRUE)
mean(data$val.measure)
data <- read.csv("data.csv", header = TRUE)
mean(data$val.measure)
mean(data$measure)
sd(data$measure)
View(data)
knitr::opts_chunk$set(echo = TRUE)
head(light)
light <- read.table("SGTADATASETS/light.dat", header = TRUE)
View(light)
head(light)
t.test(light$Brand1, light$Brand2)
t.test(light$Brand1, light$Brand2, var.equal = FALSE)
t.test(light$Brand1, light$Brand2, var.equal = TRUE)
t.test(light$Brand1, light$Brand2, var.equal = FALSE)
t.test(light$Brand1, light$Brand2)
qqline(light$Brand2)}
qqline(light$Brand1)}
{qqnorm(light$Brand1)
qqline(light$Brand1)}
{qqnorm(light$Brand2)
qqline(light$Brand2)}
par(mfrow = c(1, 2))
{qqnorm(light$Brand1)
qqline(light$Brand1)}
{qqnorm(light$Brand2)
qqline(light$Brand2)}
#Check whether variance is equal
c(sd(light$Brand1, light$Brand2, var.equal = TRUE))
#Check whether variance is equal
c(sd(light$Brand1, light$Brand2)
#Check whether variance is equal
c(sd(light$Brand1, sd(light$Brand2))
#Check whether variance is equal
c(sd(light$Brand1), sd(light$Brand2))
boxplot(light)
{qqnorm(light$Brand2)
qqline(light$Brand2)}
{qqnorm(light$Brand1)
qqline(light$Brand1)}
par(mfrow = c(1, 2))
{qqnorm(light$Brand1)
qqline(light$Brand1)}
{qqnorm(light$Brand2)
qqline(light$Brand2)}
t.test(light$Brand1, light$Brand2, var.equal = TRUE)
farm <- read.table("SGTADATASETS/farm.dat", header = TRUE)
difference = farm$yield[farm$plot == "sprayed"] - farm$yield[farm$plot == "unsprayed"]
#Check normality
{qqnorm(difference) qqline(difference)}
qqline(difference)}
{qqnorm(difference)
qqline(difference)}
t.test(yield - plot, paired= TRUE, data = farm, alternative = g)
t.test(yield - plot, paired= TRUE, data = farm, alternative = g)
boxplot(difference)
t.test(yield ~ plot, paired = TRUE, data = farm, alternative = g)
t.test(yield ~ plot, paired = TRUE, data = farm, alternative = 'g')
View(farm)
t.test(difference, alternative = 'g')
t.test(difference, alternative = 'g')
t.test(yield ~ plot, paired = TRUE, data = farm, alternative = 'g')
t.test(difference, alternative = 'g')
t.test(difference)
t.test(difference, alternative = 'g')
fertile <- read.table("SGTADATASETS/fertile.dat", header = TRUE)
par(mfrow = c(1,2))
{qqnorm(fertlie$fertile)
qqline(fertlie$fertile)}
par(mfrow = c(1,2))
{qqnorm(fertile$fertile)
qqline(fertlie$fertile)}
par(mfrow = c(1,2))
{qqnorm(fertile$fertile)
qqline(fertile$fertile)}
{qqnorm(fertile$nonfertile)
qqline(fertile$nonfertile)}
c(sd(fertile$fertile), sd(fertile$nonfertile))
boxplot(fertile)
t.test(fertile$fertile, fertile$nonfertile, ver.equal = FALSE)
blood <- read.table("blood.txt")
knitr::opts_chunk$set(echo = TRUE)
# Part 1
## Question 1
In a paper entitled “The origin of Precambrian Iron Formation”, Lindhurst reported on the total Fe content
iron <- read.table("SGTADATASETS/iron.txt", header = TRUE)
View(iron)
iron.aov = aov(content ~ formation, data = iron)
##First check for variances
boxplot(content ~ formation, data = iron)
#Check for normality of residuals
qqnorm(iron.aov$residuals)
summary(iron.aov)
barlett.test(content ~ formation, data = iron)
bartlett.test(content ~ formation, data = iron)
ns = with(iron, tapply(iron$content, iron$formation, length))
ns
sds = with(iron, tapply(iron$content, iron$formation, sd))
sd
sds
#Check for normality of residuals
qqnorm(iron.aov$residuals)
qqnorm(iron.aov$residuals)
qqline(iron.aov$residuals)
#Check for normality of residuals
par(mfrow = c(1,2))
par(mfrow = c(1,2))
qqnorm(iron.aov$residuals)
qqline(iron.aov$residuals)
par(mfrow = c(1,2))
{qqnorm(iron.aov$residuals)
qqline(iron.aov$residuals)}
ns = with(iron, tapply(iron$content, iron$formation, length))
means = with (iron, tapply(iron$content, iron$formation, mean))
sds = with (iron, tapply(iron$content, iron$formation, sd))
iron_summary = data.frame(n= ns, mean = means, sd = sds)
sd_max(iron_summary$sd)/min(iron_summary$sd)<2
ns = with(iron, tapply(iron$content, iron$formation, length))
means = with (iron, tapply(iron$content, iron$formation, mean))
sds = with (iron, tapply(iron$content, iron$formation, sd))
iron_summary = data.frame(n= ns, mean = means, sd = sds)
max(iron_summary$sd)/min(iron_summary$sd)<2
plot(iron.aov)
summary(iron.aov)
iron <- read.table("SGTADATASETS/iron.txt", header = TRUE)
iron.aov = aov(content ~ formation, data = iron)
#First check for variances, visualization or rule of thumb or f-test/barlett's test
boxplot(content ~ formation, data = iron)
bartlett.test(content ~ formation, data = iron)
ns = with(iron, tapply(iron$content, iron$formation, length))
means = with (iron, tapply(iron$content, iron$formation, mean))
sds = with (iron, tapply(iron$content, iron$formation, sd))
iron_summary = data.frame(n= ns, mean = means, sd = sds)
max(iron_summary$sd)/min(iron_summary$sd)<2
#Check for normality of residuals
par(mfrow = c(1,2))
{qqnorm(iron.aov$residuals)
qqline(iron.aov$residuals)}
summary(iron.aov)
temp <- read.csv('week4-quiz-data.csv')
View(temp)
summary(temp.aov)
temp.aov = aov(temp)
temp.aov = aov(data = temp, Y ~ Treatment)
summary(temp.aov)
temp <- read.csv('week4-quiz-data(1).csv')
temp.aov = aov(data = temp, Y ~ Treatment)
summary(temp.aov)
temp <- read.csv('week4-quiz-data(1).csv')
temp.aov = aov(data = temp, Y ~ Treatment)
summary(temp.aov)
temp <- read.csv('week4-quiz-data.csv')
View(temp)
temp.aov = aov(data = temp, Y ~ Treatment)
summary(temp.aov)
str(axial)
axial = read.table('SGTADATASETS/arial.txt', header = TRUE)
axial = read.table('SGTADATASETS/arial.txt', header = TRUE)
axial = read.table('SGTADATASETS/axial.txt', header = TRUE)
str(axial)
head(axial)
axial.aov = aov(asi ~ treatment, data = axial)
#Check assumptions
pat(mfrow = c(1,2))
#Check assumptions
par(mfrow = c(1,2))
bartlett.test(asi ~ treatment, data = axial)
sd_values <- tapply(axial$asi, axial$treatment, sd)
sd_values
str(axial)
qqline(axial.aov$residuals)}
par(mfrow = c(1,2))
{qqnorm(axial.aov$residuals)
qqline(axial.aov$residuals)}
sd_values <- tapply(asi ~ treatment, data = axial, sd)
sd_values <- tapply(axial$asi, axial$treatment, sd)
max(sd_values) / min(sd_values)
bartlett.test(asi ~ treatment, data = axial)
summary(axial.aov)
TukeyHSD(axial.aov)
week7 = read.csv('SGTADATASETS/week7.csv', headers = TRUE)
week7 <- read.csv('SGTADATASETS/week7.csv', header = TRUE)
View(week7)
week7$BMI = week7$Weight/(week7$Height / 100)^2
week7$BMI
week7$BMI = round(week7$BMI, 2)
week7$BMI
week7$Gender = new[match(week7$Gender, old)]
old = c("M", "F")
new = c("Male", "Female")
week7$Gender = new[match(week7$Gender, old)]
week7$Gender
mean(week7$Height)
which(week7$Name == 'Rosalie')
week7[which(week7$Name == 'Rosalie'), 1]
week7[which(week7$Name == 'Rosalie'), 2]
week7[which(week7$Name == 'Rosalie'), 3]
week7[which(week7$Name == 'Rosalie'), 8]
week7[which(week7$Name == 'Rosalie'), 9]
subset(week7, name %in% c('Rosalie', 'Aimen'))
subset(week7, Name %in% c('Rosalie', 'Aimen'))
install.packages('tinytex')
knitr::opts_chunk$set(echo = TRUE)
ecoli = read.table("SGTADTASETS/ecoli.txt", header = TRUE)
ecoli = read.table("SGTADATASETS/ecoli.txt", header = TRUE)
str(ecoli)
abline(lm(HEC ~ HGMF, data = ecoli))}
ecoli = read.table("SGTADATASETS/ecoli.txt", header = TRUE)
str(ecoli)
{plot(HEC ~ HGMF, data = ecoli)
abline(lm(HEC ~ HGMF, data = ecoli))}
summary(ecoli.lm)
ecoli.lm = lm(HEC ~ HGMF, data = ecoli)
summary(ecoli.lm)
par(mfrow = c(1,2))
plot(ecoli.lm)
plot(ecoli.lm, which = 1,2)
plot(ecoli.lm, which = (1,2))
?plot(ecoli.lm)
plot(ecoli.lm)
### d)
new = file:///C:/Users/alhas/Downloads/flow_meter.csv
### d)
new = read.csv(file:///C:/Users/alhas/Downloads/flow_meter.csv)
new = read.csv('file:///C:/Users/alhas/Downloads/flow_meter.csv')
new
regression_model <- lm(weight ~ pressure, data = new)
# Step 5: Extract the intercept and slope
intercept <- coef(regression_model)["(Intercept)"]
slope <- coef(regression_model)["pressure"]
# Step 6: Print the results
cat("Intercept:", round(intercept, 3), "\n")
cat("Slope:", round(slope, 3), "\n")
knitr::opts_chunk$set(echo = TRUE)
aisf = read.csv('SGTADATASETS/aisfemales.csv', header=TRUE)
plot(aisf)
d
d <- read.csv('mr_data.csv')
d
model <- lm(flow ~ weight + temperature + pressure, data=data)
model <- lm(flow ~ weight + temperature + pressure, data=data)
d
model <- lm(flow ~ weight + temperature + pressure, data=d)
model
turtle <- read.csv("SGTADATASETS/turtle.csv", header=TRUE)
turtles <- read.csv("SGTADATASETS/turtles.csv", header=TRUE)
turtles
lm?
?lm
?lm
data <- read.csv("poly_data.csv")
data
View(data)
fit <- lm(temp ~ poly(flow, degree = 4, raw = TRUE), data = data)
fit
fit
anova_table <- anova(fit)
p_values <- anova_table[, "Pr(>F)"]
p_values
p_values[2]
anova_table
fit <- lm(temp ~ flow + I(flow^2) + I(flow^3) + I(flow^4), data = data)
fit
anova_table <- anova(fit)
anova_table
head(data)
data
View(data)
data <- read.csv("categ_data.csv")
View(data)
model <- lm(dbp ~ chol_level * diet, data = data)
anova_result <- anova(model)
print(anova_result)
data = read.csv("categ_data.csv", header=TRUE)
data
View(data)
model <- lm(dbp ~ chol_level * diet, data = data)
anova_result <- anova(model)
summary(anova_result)
anova_result
table(data[,2:3])
categ_dat = read.csv("categ_data.csv", header=TRUE)
aov(dbp ~ as.factor(chol_level)*as.factor(diet), data=categ_dat)
table(data[,2:3])
categ_dat = read.csv("categ_data.csv", header=TRUE)
table(data[,2:3])
categANOVA=aov(dbp ~ as.factor(chol_level)*as.factor(diet), data=categ_dat)
summary(categANOVA))
summary(categANOVA)
